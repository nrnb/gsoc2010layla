<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================== -->
<!-- Plugin build file     -->
<!-- =================================================================== -->

<project name = "word_cloud" default="all" basedir=".">
	
	<!-- The build directory -->
	<!-- All files generated by ant go here -->
	<property name="build.dir"    value="${basedir}/build"/>

	<!-- The java source directory-->
	<property name="src.dir"      value="${basedir}/src"/>

	<!-- The lib directory -->
	<!-- Contains all third-party JAR files, required for compilation -->
	<property name="lib.dir"       value="${basedir}/lib"/>
	
	<!-- The doc directory -->
	<!-- Contains all external documentation -->
	<property name="doc.dir"       value="${basedir}/doc"/>
	
	<!--
	**********************************
	* TO DEFINE PATH TO CYTOSCAPE:   *
	**********************************
	-Ensure to set the value for property name ="cytoscape.dir" to the location
	of cytoscape on the computer which is compiling this plugin.  The cytoscape jars
	are required for the compilation of the WordCloud plugin.
	
	EXAMPLES:
	
	Apple:
		<property name="cytoscape.dir" value="/Applications/Cytoscape_v2.7.0"/>
	  Linux:
		<property name="cytoscape.dir" value="/usr/local/Cytoscape_v2.7.0"/>
	  Windows:
		<property name="cytoscape.dir" value="C:/Program Files/Cytoscape-v2.7.0"/>
	-->
	
	<!-- Define the Cytoscape directories -->
	<property name="cytoscape.dir" value="C:/Program Files/Cytoscape_v2.7.0"/>
    <property name="cytoscape.lib.dir" value="${cytoscape.dir}/lib"/>
	
	<!-- Property Files -->
	<property file="plugin.props" />
	
	<!-- Build Files names -->
	<property name="src_release_root.dir" value="${build.dir}/release_src"/>
	<property name="binary_release.dir" value="${build.dir}/release_bin"/>
	
	<!-- Jar Files -->
	<property name="jars.dir" value="${basedir}/jars"/>

	
	<!--  ============ Compilation Control Options ======================= -->
  	<property name="compile.debug"       value="true"/>
  	<property name="compile.deprecation" value="true"/>
  	<property name="compile.optimize"    value="true"/>
	<patternset id="compiler.resources">
		<include name="**/?*.properties"/>
		<include name="**/?*.xml"/>
		<include name="**/?*.gif"/>
		<include name="**/?*.png"/>
		<include name="**/?*.jpeg"/>
		<include name="**/?*.jpg"/>
		<include name="**/?*.html"/>
		<include name="**/?*.dtd"/>
		<include name="**/?*.tld"/>
		<include name="**/?*.txt"/>
		<exclude name="**/?*.ai"/>
		<exclude name="**/?*.AI"/>
	</patternset>
	

	<!-- ==================== Compilation Classpath ====================== -->
  
    <path id="compile.classpath">
		<pathelement path="${build.dir}/classes"/>
		<fileset dir="${lib.dir}">
       		 	<include name="*.jar"/>
		</fileset>
		<fileset dir="${cytoscape.dir}/lib">
       		 	<include name="*.jar"/>
		</fileset>
         <fileset dir="${cytoscape.dir}">
                     <include name="cytoscape.jar"/>
         </fileset>
  	</path>
	
	 <!-- ==================== Clean Target =============================== -->
	    <target name="clean"
	        description="Deletes all build files and starts fresh">
	        <delete dir="${build.dir}"/>
	        <delete file="${basedir}/WordCloud.jar"/>
	    	<delete file="${jars.dir}/WordCloud.jar"/>
	    </target>

	    <!-- ==================== Compile Target ============================= -->
	    <target name="compile" depends="prepare"
	        description="Compiles all Java source files">
	        <mkdir dir="${build.dir}/classes"/>
	        <javac srcdir="${src.dir}"
			    source="1.5"
	        	target="1.5"
	            destdir="${build.dir}/classes"
	            debug="${compile.debug}"
	            deprecation="${compile.deprecation}"
	            optimize="${compile.optimize}">
	        <classpath refid="compile.classpath"/>
	        </javac>
	        	
	        <copy todir="${build.dir}/classes">
	        	<fileset dir="${basedir}/src">
	        		<patternset refid="compiler.resources" /> 
	        		<type type="file" /> 
	        	</fileset>
	        </copy>

	    </target>

	    <!-- ==================== Jar Target ================================= -->
	    <target name="jar" depends="compile"
	            description="Creates Plugin Jar: WordCloud.jar">
	       <unzip dest="${build.dir}/classes">
	         <fileset dir="${lib.dir}">
	           <include name="*.jar"/>
	         </fileset>
	       </unzip>
	        <copy file="${basedir}/plugin.props" todir="${build.dir}/classes/cytoscape/csplugins/wordcloud" />
	        <jar destfile="${jars.dir}/WordCloud.jar"
	             basedir="${build.dir}/classes">
		    	<manifest>
		     		<attribute name="Cytoscape-Plugin" 
			           value="cytoscape.csplugins.wordcloud.SemanticSummaryPlugin"/>
		     	</manifest>
			</jar>
	    </target>

		<!-- ==================== All  ========================== -->
	    <target name="all" depends="source_release,binary_release"/>


		<!-- ==================== Prepare Target ============================= -->
	    <target name="prepare" depends="clean">
	        <!-- Create build directories as needed -->
	        <mkdir  dir="${build.dir}"/>
	        <mkdir  dir="${build.dir}/classes"/>
	    </target>

		<!-- ==================== Source Release ============================= -->
		<target name="source_release" depends="jar">
			<property name="src_release.dir" value="${src_release_root.dir}/WordCloudPlugin_v${pluginVersion}"/>
			<mkdir dir="${src_release_root.dir}"/>
			<mkdir dir="${src_release.dir}"/>
			<mkdir dir="${src_release.dir}/src"/>
			<copy todir="${src_release.dir}/src">
				<fileset dir="${basedir}/src">
				</fileset>
			</copy>
			<mkdir dir="${src_release.dir}/doc"/>
			<copy todir="${src_release.dir}/doc">
				<fileset dir="${basedir}/doc">
				</fileset>
			</copy>
			<mkdir dir="${src_release.dir}/lib"/>
			<copy todir="${src_release.dir}/lib">
				<fileset dir="${basedir}/lib">
				</fileset>
			</copy>
			<mkdir dir="${src_release.dir}/jars"/>
			<copy todir="${src_release.dir}/jars">
				<fileset dir="${basedir}/jars">
				</fileset>
			</copy>
			<copy file="build.xml" todir="${src_release.dir}"/>
			<copy file="plugin.props" todir="${src_release.dir}"/>
			<tar destfile="WordCloudPlugin_v${pluginVersion}${pluginReleaseSuffix}_src.tar.gz" basedir="${src_release_root.dir}" compression="gzip" longfile="gnu"/>
			<zip destfile="WordCloudPlugin_v${pluginVersion}${pluginReleaseSuffix}_src.zip" basedir="${src_release_root.dir}"/>
		</target>
	
		<!-- ==================== Binary Release ============================= -->
		<target name="binary_release" depends="jar" description="Make a binary-release">
			<mkdir dir="${binary_release.dir}"/>
			<copy file="${jars.dir}/WordCloud.jar" todir="${binary_release.dir}" /> 
			<copy file="doc/LICENSE.txt" todir="${binary_release.dir}" /> 
			<copy file="doc/README.TXT" todir="${binary_release.dir}" /> 
			<zip destfile="WordCloudPlugin_v${pluginVersion}${pluginReleaseSuffix}.zip" basedir="${binary_release.dir}" /> 
			</target>
			
	</project>




